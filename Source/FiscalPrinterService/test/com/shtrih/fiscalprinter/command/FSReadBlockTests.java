package com.shtrih.fiscalprinter.command;

import org.junit.Test;

import static com.shtrih.util.ByteUtils.byteArray;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;

/**
 * @author P.Zhirkov
 */
public class FSReadBlockTests {

    @Test
    public void should_serialize_request() throws Exception {
        FSReadBlock cmd = new FSReadBlock(30, 240, 94);

        byte[] data = cmd.encodeData();

        byte[] expectedData = byteArray(
                0xFF, 0x31,
                0x1E, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x5E);

        assertArrayEquals(expectedData, data);
    }

    @Test
    public void should_deserialize_response() throws Exception {
        FSReadBlock cmd = new FSReadBlock(30, 240, 144);

        byte[] responseData = byteArray(
                0xFF, 0x31, 0x00, 0x01, 0xD1, 0xBA, 0xA2, 0x53, 0xA8, 0x3D, 0x11, 0xDB, 0xEE, 0x41, 0x66, 0xE4, 0x38, 0x4D, 0x37, 0x4A,
                0xDE, 0x74, 0x89, 0x38, 0x1A, 0x10, 0xB3, 0x91, 0x78, 0xA5, 0x45, 0xEB, 0x50, 0x16, 0xE1, 0x8D, 0x24, 0x06, 0x45, 0xCB,
                0xB2, 0xC4, 0x1F, 0x2A, 0xB0, 0x80, 0xBD, 0x6A, 0x23, 0x89, 0x3E, 0xDB, 0xE4, 0x07, 0x36, 0x4A, 0xFB, 0x33, 0xD0, 0x2F,
                0x1B, 0xA2, 0xA8, 0xD1, 0xFB, 0xA2, 0x48, 0x32, 0xCB, 0x30, 0x88, 0xEE, 0xC4, 0xDF, 0x1C, 0xA6, 0x1F, 0x96, 0x2F, 0xE2,
                0xA8, 0x46, 0x28, 0xEB, 0xB5, 0x0E, 0x6C, 0x76, 0xF2, 0x86, 0x4F, 0xCE, 0xBD, 0x06, 0xD6, 0xDF, 0x9A, 0x01
        );

        cmd.decodeData(responseData);

        assertArrayEquals(byteArray(0x01, 0xD1, 0xBA, 0xA2, 0x53, 0xA8, 0x3D, 0x11, 0xDB, 0xEE, 0x41, 0x66, 0xE4, 0x38, 0x4D, 0x37, 0x4A,
                0xDE, 0x74, 0x89, 0x38, 0x1A, 0x10, 0xB3, 0x91, 0x78, 0xA5, 0x45, 0xEB, 0x50, 0x16, 0xE1, 0x8D, 0x24, 0x06, 0x45, 0xCB,
                0xB2, 0xC4, 0x1F, 0x2A, 0xB0, 0x80, 0xBD, 0x6A, 0x23, 0x89, 0x3E, 0xDB, 0xE4, 0x07, 0x36, 0x4A, 0xFB, 0x33, 0xD0, 0x2F,
                0x1B, 0xA2, 0xA8, 0xD1, 0xFB, 0xA2, 0x48, 0x32, 0xCB, 0x30, 0x88, 0xEE, 0xC4, 0xDF, 0x1C, 0xA6, 0x1F, 0x96, 0x2F, 0xE2,
                0xA8, 0x46, 0x28, 0xEB, 0xB5, 0x0E, 0x6C, 0x76, 0xF2, 0x86, 0x4F, 0xCE, 0xBD, 0x06, 0xD6, 0xDF, 0x9A, 0x01), cmd.getData());
    }
}

